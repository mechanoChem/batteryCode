#ifndef battery_particleModel_h
#define battery_particleModel_h

#include "../battery.h"
#include "particleModelResidual.h"
#include "particleModelFormula.h"


template <int dim>
class battery_particleModel: public battery<dim>
{
  public:
     battery_particleModel (const unsigned int _quad_electrode, const unsigned int _quad_electrolyte, parametersClass& _params);
    ~ battery_particleModel();
    void run ();
		
    //particleModelFormula<Sacado::Fad::DFad<double>,dim>* electricChemoFormula;
		particleModelResidual<Sacado::Fad::DFad<double>,dim>* particleResidual;
		//std::shared_ptr<FESystem<dim>> all_fe;
		void setup_FeSystem();
		void make_grid();
    void setup_constraints();
    void apply_initial_condition();
		void refine_grid();
    void assemble_system();
    void output_results (const unsigned int cycle) const;
		void solve();
		void setMultDomain();
		void assemble_interface_electrode_term(const typename hp::DoFHandler<dim>::active_cell_iterator &cell, unsigned int f, dealii::Table<1, Sacado::Fad::DFad<double> > &ULocal, Table<1, double > &ULocalConv, PETScWrappers::Vector& localized_U, dealii::Table<1, Sacado::Fad::DFad<double> >& R);
		void assemble_interface_separator_term(const typename hp::DoFHandler<dim>::active_cell_iterator &cell, unsigned int f, dealii::Table<1, Sacado::Fad::DFad<double> > &ULocal, Table<1, double > &ULocalConv, PETScWrappers::Vector& localized_U, dealii::Table<1, Sacado::Fad::DFad<double> >& R);
		
		double get_phi_InverBV(double IpA, double c_li, double c_li_plus, int domainflag);

		unsigned int period;
		double periodTime;
		
		int currentflag;

};

#endif
